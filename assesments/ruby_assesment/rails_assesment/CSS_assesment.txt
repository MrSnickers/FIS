- What does "semantic markup" mean?
It means using HTMl that describes the purpose of the elements.  This is in contrast to using HTML elements that have desirable properties and do not describe their content.

- What does a doctype do?
Alerts the browser as to what kind of HTMl the page is written in.

- Explain what standards and standards bodies are and why they are important.
Standards are best practice reccomendations made by interested parties, called standards bodies.  Standards bodies can be formed around many interests such as accessability or the promotion of particular technologies.

- What are CSS3 and HTML5? How are they different from previous standards? Why is this important?
CSS is a styling language that describes the apprearnce and formatting of a website.  HTML is a markup language that describes the content of a webpage.  CSS3 and HTML5 are the latest versions of their languages that have been recently adapted to standardize and legitimitize the most common tips and tricks that users have been making use of to get around the limitations of the older versions.

- What does a CSS reset do and why is it useful?
A CSS reset removes the default styling provided by the browser.

- What is the box model? Draw a picture and label the portions here.
The box model is a way to think of the attributes of padding, border, and margin around each element. Margin is the outmost attribute and is not considered part of the size of the element.  Border is what is traditionally thought of as border and padding is space between the main visual part of the element and the border. 

- What is the difference between a relative, fixed, absolute, and statically positioned element?
Elements that are not specifically psotioned have the default "static" and are present in their listed order in the DOM.  Relatively positioned elements also have a space left for them in the DOM akthough they can be manipulated by means of top, left, right, or bottom attributes.  Both Fixed and absolutely positioned elements are completely taken out of the flow of the DOM and are positioned explicitly with attributes.  The diffrenence betweent hem is that fixed elements are positioned relativet to the view window and absolutly positioned elements are positioned in relation to their first positioned ancestor.

- What is SASS and why do people use it?
SASS is a type of preprocessor for CSS.  It is a language that compliles into CSS similar to how HAML compiles into HTMl.  It is used in order to have greater flexibility and easier mantaince of CSS code.

- Name one feature of SASS and explain why it is helpful.
SASS preprocessing alows the use of variables, which is a great way to keep a lot of information in one central place so that it can easily be changed in the future.

- Explain prototypal inheritance.
In JavaScript there are protoype objects that serve as repositories of information about classes of objects.  If a class's prototype is altered, the capabilities of all objects in that class are altered.  This is in contrast to changing the constructor method of a class so that all subsequent, but not pre-existing, objects of that class have altered capabilities.

- What is a closure and how/why would you use one?
A closure is a nested function that includes the scope of where it is defined.

- What is an anonymous function? Give a typical usecase for one.
An anonymous function is a function that is defined but not given a name.  It is used most commonly where the function only needs to be run once and does not need to referred to again.

- Describe the difference between
function Person(){}
var person = Person()
var person = new Person()

Function Person is a constructor function in order to make a Person object with no arguments and no contents. var person = new Person() is a call to that function to make an object called "person" that is a Person object. var person = Person() is the assignment of an object called "person" to whatever is the output of calling the Person() function.

- Explain hoisting.
Hoisting is a feature in JavaScript where code within a scope is aware of the existance of any variable defined inside of it, even if the variable is defined further down in the code.  However only the deffinition and not the assignment of that variable is hoisted.

- What is the difference between === and ==?
Evaluation by "===" requires that both values are strictly equal, such as both being a nul object, and "==" is less rigourus as it would accept the equality of nil and undefined.